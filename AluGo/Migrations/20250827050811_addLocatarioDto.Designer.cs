// <auto-generated />
using System;
using AluGo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AluGo.Migrations
{
    [DbContext(typeof(AluGoDbContext))]
    [Migration("20250827050811_addLocatarioDto")]
    partial class addLocatarioDto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AluGo.Domain.Contrato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DescontoAteVencimento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte>("DiaVencimento")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("ImovelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("JurosAoDiaPercentual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("LocatarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("MultaPercentual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReajusteIndice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("ReajustePeriodicidadeMeses")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("ReajusteUltimaData")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ValorAluguel")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ImovelId");

                    b.HasIndex("LocatarioId");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("AluGo.Domain.Imovel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apelido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<char>("Tipo")
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("UF")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Imoveis");
                });

            modelBuilder.Entity("AluGo.Domain.Locatario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<char>("TipoPessoa")
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.ToTable("Locatarios");
                });

            modelBuilder.Entity("AluGo.Domain.Parcela", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Competencia")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("QuitadaEm")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("ValorBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorDesconto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorJuros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorMulta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorOutros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId", "Competencia")
                        .IsUnique()
                        .HasFilter("[Competencia] IS NOT NULL");

                    b.ToTable("Parcelas");
                });

            modelBuilder.Entity("AluGo.Domain.Reajuste", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataBase")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Percentual")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.ToTable("Reajustes");
                });

            modelBuilder.Entity("AluGo.Domain.Recebimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("MeioPagamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ParcelaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ParcelaId");

                    b.ToTable("Recebimentos");
                });

            modelBuilder.Entity("AluGo.Domain.Recibo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CaminhoArquivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GeradoEm")
                        .HasColumnType("datetime2");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<Guid>("ParcelaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParcelaId")
                        .IsUnique();

                    b.ToTable("Recibos");
                });

            modelBuilder.Entity("AluGo.Domain.Contrato", b =>
                {
                    b.HasOne("AluGo.Domain.Imovel", "Imovel")
                        .WithMany("Contratos")
                        .HasForeignKey("ImovelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AluGo.Domain.Locatario", "Locatario")
                        .WithMany("Contratos")
                        .HasForeignKey("LocatarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Imovel");

                    b.Navigation("Locatario");
                });

            modelBuilder.Entity("AluGo.Domain.Parcela", b =>
                {
                    b.HasOne("AluGo.Domain.Contrato", "Contrato")
                        .WithMany("Parcelas")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("AluGo.Domain.Reajuste", b =>
                {
                    b.HasOne("AluGo.Domain.Contrato", "Contrato")
                        .WithMany("Reajustes")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("AluGo.Domain.Recebimento", b =>
                {
                    b.HasOne("AluGo.Domain.Parcela", "Parcela")
                        .WithMany("Recebimentos")
                        .HasForeignKey("ParcelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parcela");
                });

            modelBuilder.Entity("AluGo.Domain.Recibo", b =>
                {
                    b.HasOne("AluGo.Domain.Parcela", "Parcela")
                        .WithOne("Recibo")
                        .HasForeignKey("AluGo.Domain.Recibo", "ParcelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parcela");
                });

            modelBuilder.Entity("AluGo.Domain.Contrato", b =>
                {
                    b.Navigation("Parcelas");

                    b.Navigation("Reajustes");
                });

            modelBuilder.Entity("AluGo.Domain.Imovel", b =>
                {
                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("AluGo.Domain.Locatario", b =>
                {
                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("AluGo.Domain.Parcela", b =>
                {
                    b.Navigation("Recebimentos");

                    b.Navigation("Recibo");
                });
#pragma warning restore 612, 618
        }
    }
}
